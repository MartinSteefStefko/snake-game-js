(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "../pkg sync recursive":
/*!*******************!*\
  !*** ../pkg sync ***!
  \*******************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../pkg sync recursive\";\n\n//# sourceURL=webpack:///../pkg_sync?");

/***/ }),

/***/ "../pkg/rust_js_snake_game.js":
/*!************************************!*\
  !*** ../pkg/rust_js_snake_game.js ***!
  \************************************/
/*! exports provided: greet, Movement, Game, Vector, __wbg_alert_300f1c634d02c7e5, __wbg_vector_new, __wbindgen_object_drop_ref, __wbg_self_1b7a39e3a92c949c, __wbg_require_604837428532a733, __wbg_crypto_968f1772287e2df0, __wbindgen_is_undefined, __wbg_getRandomValues_a3d34b4fee3c2869, __wbg_getRandomValues_f5e14ab7ac8e995d, __wbg_randomFillSync_d5bd2d655fdf256a, __wbg_new_ec28d6ba821801cb, __wbg_push_ffaa2df7422d3b4c, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"greet\", function() { return greet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Movement\", function() { return Movement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Game\", function() { return Game; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Vector\", function() { return Vector; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_alert_300f1c634d02c7e5\", function() { return __wbg_alert_300f1c634d02c7e5; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_vector_new\", function() { return __wbg_vector_new; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_drop_ref\", function() { return __wbindgen_object_drop_ref; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_self_1b7a39e3a92c949c\", function() { return __wbg_self_1b7a39e3a92c949c; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_require_604837428532a733\", function() { return __wbg_require_604837428532a733; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_crypto_968f1772287e2df0\", function() { return __wbg_crypto_968f1772287e2df0; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_is_undefined\", function() { return __wbindgen_is_undefined; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_getRandomValues_a3d34b4fee3c2869\", function() { return __wbg_getRandomValues_a3d34b4fee3c2869; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_getRandomValues_f5e14ab7ac8e995d\", function() { return __wbg_getRandomValues_f5e14ab7ac8e995d; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_randomFillSync_d5bd2d655fdf256a\", function() { return __wbg_randomFillSync_d5bd2d655fdf256a; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_new_ec28d6ba821801cb\", function() { return __wbg_new_ec28d6ba821801cb; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_push_ffaa2df7422d3b4c\", function() { return __wbg_push_ffaa2df7422d3b4c; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony import */ var _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rust_js_snake_game_bg.wasm */ \"../pkg/rust_js_snake_game_bg.wasm\");\n\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? __webpack_require__(/*! util */ \"./node_modules/util/util.js\").TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint8Memory0 = new Uint8Array(_rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n/**\n*/\nfunction greet() {\n    _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"greet\"]();\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nfunction handleError(e) {\n    _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_exn_store\"](addHeapObject(e));\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n*/\nconst Movement = Object.freeze({ TOP:0,RIGHT:1,DOWN:2,LEFT:3, });\n/**\n*/\nclass Game {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Game.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_game_free\"](ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get width() {\n        var ret = _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_game_width\"](this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set width(arg0) {\n        _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_game_width\"](this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get height() {\n        var ret = _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_game_height\"](this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set height(arg0) {\n        _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_game_height\"](this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get speed() {\n        var ret = _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_game_speed\"](this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set speed(arg0) {\n        _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_game_speed\"](this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get score() {\n        var ret = _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_game_score\"](this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set score(arg0) {\n        _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_game_score\"](this.ptr, arg0);\n    }\n    /**\n    * @returns {Vector}\n    */\n    get direction() {\n        var ret = _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_game_direction\"](this.ptr);\n        return Vector.__wrap(ret);\n    }\n    /**\n    * @param {Vector} arg0\n    */\n    set direction(arg0) {\n        _assertClass(arg0, Vector);\n        var ptr0 = arg0.ptr;\n        arg0.ptr = 0;\n        _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_game_direction\"](this.ptr, ptr0);\n    }\n    /**\n    * @returns {Vector}\n    */\n    get food() {\n        var ret = _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_game_food\"](this.ptr);\n        return Vector.__wrap(ret);\n    }\n    /**\n    * @param {Vector} arg0\n    */\n    set food(arg0) {\n        _assertClass(arg0, Vector);\n        var ptr0 = arg0.ptr;\n        arg0.ptr = 0;\n        _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_game_food\"](this.ptr, ptr0);\n    }\n    /**\n    * @param {number} width\n    * @param {number} height\n    * @param {number} speed\n    * @param {number} snake_length\n    * @param {Vector} direction\n    */\n    constructor(width, height, speed, snake_length, direction) {\n        _assertClass(direction, Vector);\n        var ptr0 = direction.ptr;\n        direction.ptr = 0;\n        var ret = _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"game_new\"](width, height, speed, snake_length, ptr0);\n        return Game.__wrap(ret);\n    }\n    /**\n    * @returns {Array<any>}\n    */\n    get_snake() {\n        var ret = _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"game_get_snake\"](this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @param {number} timespan\n    * @param {number | undefined} movement\n    */\n    process(timespan, movement) {\n        _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"game_process\"](this.ptr, timespan, isLikeNone(movement) ? 4 : movement);\n    }\n    /**\n    * @returns {boolean}\n    */\n    is_over() {\n        var ret = _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"game_is_over\"](this.ptr);\n        return ret !== 0;\n    }\n}\n/**\n*/\nclass Vector {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Vector.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_vector_free\"](ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get x() {\n        var ret = _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_vector_x\"](this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set x(arg0) {\n        _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_vector_x\"](this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get y() {\n        var ret = _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_vector_y\"](this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set y(arg0) {\n        _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_vector_y\"](this.ptr, arg0);\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    */\n    constructor(x, y) {\n        var ret = _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"vector_new\"](x, y);\n        return Vector.__wrap(ret);\n    }\n    /**\n    * @param {Vector} other\n    * @returns {Vector}\n    */\n    subtract(other) {\n        _assertClass(other, Vector);\n        var ret = _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"vector_subtract\"](this.ptr, other.ptr);\n        return Vector.__wrap(ret);\n    }\n    /**\n    * @param {Vector} other\n    * @returns {Vector}\n    */\n    add(other) {\n        _assertClass(other, Vector);\n        var ret = _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"vector_add\"](this.ptr, other.ptr);\n        return Vector.__wrap(ret);\n    }\n    /**\n    * @param {number} number\n    * @returns {Vector}\n    */\n    scale_by(number) {\n        var ret = _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"vector_scale_by\"](this.ptr, number);\n        return Vector.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    length() {\n        var ret = _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"vector_length\"](this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {Vector}\n    */\n    normalize() {\n        var ret = _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"vector_normalize\"](this.ptr);\n        return Vector.__wrap(ret);\n    }\n    /**\n    * @param {Vector} other\n    * @returns {boolean}\n    */\n    equal_to(other) {\n        _assertClass(other, Vector);\n        var ret = _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"vector_equal_to\"](this.ptr, other.ptr);\n        return ret !== 0;\n    }\n    /**\n    * @param {Vector} other\n    * @returns {boolean}\n    */\n    is_opposite(other) {\n        _assertClass(other, Vector);\n        var ret = _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"vector_is_opposite\"](this.ptr, other.ptr);\n        return ret !== 0;\n    }\n    /**\n    * @param {Vector} other\n    * @returns {number}\n    */\n    dot_product(other) {\n        _assertClass(other, Vector);\n        var ret = _rust_js_snake_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"vector_dot_product\"](this.ptr, other.ptr);\n        return ret;\n    }\n}\n\nconst __wbg_alert_300f1c634d02c7e5 = function(arg0, arg1) {\n    alert(getStringFromWasm0(arg0, arg1));\n};\n\nconst __wbg_vector_new = function(arg0) {\n    var ret = Vector.__wrap(arg0);\n    return addHeapObject(ret);\n};\n\nconst __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nconst __wbg_self_1b7a39e3a92c949c = function() {\n    try {\n        var ret = self.self;\n        return addHeapObject(ret);\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nconst __wbg_require_604837428532a733 = function(arg0, arg1) {\n    var ret = __webpack_require__(\"../pkg sync recursive\")(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nconst __wbg_crypto_968f1772287e2df0 = function(arg0) {\n    var ret = getObject(arg0).crypto;\n    return addHeapObject(ret);\n};\n\nconst __wbindgen_is_undefined = function(arg0) {\n    var ret = getObject(arg0) === undefined;\n    return ret;\n};\n\nconst __wbg_getRandomValues_a3d34b4fee3c2869 = function(arg0) {\n    var ret = getObject(arg0).getRandomValues;\n    return addHeapObject(ret);\n};\n\nconst __wbg_getRandomValues_f5e14ab7ac8e995d = function(arg0, arg1, arg2) {\n    getObject(arg0).getRandomValues(getArrayU8FromWasm0(arg1, arg2));\n};\n\nconst __wbg_randomFillSync_d5bd2d655fdf256a = function(arg0, arg1, arg2) {\n    getObject(arg0).randomFillSync(getArrayU8FromWasm0(arg1, arg2));\n};\n\nconst __wbg_new_ec28d6ba821801cb = function() {\n    var ret = new Array();\n    return addHeapObject(ret);\n};\n\nconst __wbg_push_ffaa2df7422d3b4c = function(arg0, arg1) {\n    var ret = getObject(arg0).push(getObject(arg1));\n    return ret;\n};\n\nconst __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n\n\n//# sourceURL=webpack:///../pkg/rust_js_snake_game.js?");

/***/ }),

/***/ "../pkg/rust_js_snake_game_bg.wasm":
/*!*****************************************!*\
  !*** ../pkg/rust_js_snake_game_bg.wasm ***!
  \*****************************************/
/*! exports provided: memory, greet, __wbg_vector_free, __wbg_get_vector_x, __wbg_set_vector_x, __wbg_get_vector_y, __wbg_set_vector_y, __wbg_game_free, __wbg_get_game_width, __wbg_set_game_width, __wbg_get_game_height, __wbg_set_game_height, __wbg_get_game_speed, __wbg_set_game_speed, __wbg_get_game_score, __wbg_set_game_score, __wbg_get_game_direction, __wbg_set_game_direction, __wbg_get_game_food, __wbg_set_game_food, vector_new, vector_subtract, vector_add, vector_scale_by, vector_length, vector_normalize, vector_equal_to, vector_is_opposite, vector_dot_product, game_new, game_get_snake, game_process, game_is_over, __wbindgen_exn_store */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./rust_js_snake_game.js */ \"../pkg/rust_js_snake_game.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///../pkg/rust_js_snake_game_bg.wasm?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _src_game_manager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/game-manager */ \"./src/game-manager.js\");\n\n\nconst gameManager = new _src_game_manager__WEBPACK_IMPORTED_MODULE_0__[\"GameManager\"]()\ngameManager.run()\n\n\n//# sourceURL=webpack:///./index.js?");

/***/ }),

/***/ "./src/config.js":
/*!***********************!*\
  !*** ./src/config.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    WIDTH: 17,\n    HEIGHT: 15,\n    SPEED: 0.006,\n    SNAKE_LENGTH: 3,\n    // x = 1 , y=1 snake will mve by one to the right\n    SNAKE_DIRECTION_X: 1,\n    SNAKE_DIRECTION_Y: 0,\n    // frames per second\n    FPS: 60\n\n\n});\n\n//# sourceURL=webpack:///./src/config.js?");

/***/ }),

/***/ "./src/controller.js":
/*!***************************!*\
  !*** ./src/controller.js ***!
  \***************************/
/*! exports provided: Controller */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Controller\", function() { return Controller; });\n/* harmony import */ var wasm_snake_game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! wasm-snake-game */ \"../pkg/rust_js_snake_game.js\");\n\n\nconst MOVEMENT_KEYS = {\n    [wasm_snake_game__WEBPACK_IMPORTED_MODULE_0__[\"Movement\"].TOP]: [87, 38],\n    [wasm_snake_game__WEBPACK_IMPORTED_MODULE_0__[\"Movement\"].RIGHT]: [68, 39],\n    [wasm_snake_game__WEBPACK_IMPORTED_MODULE_0__[\"Movement\"].DOWN]: [83, 40],\n    [wasm_snake_game__WEBPACK_IMPORTED_MODULE_0__[\"Movement\"].LEFT]: [65, 37]\n}\n\nconst STOP_KEY = 32\n\nclass Controller {\n    constructor(onStop = () => { }) {\n        // passing which from rust which is which movemnt should be executed\n        // assing to event listtener of id keydown And looping through MOVEMENT_KEYS object keys to find key whic is equal to which\n        window.addEventListener('keydown', ({ which }) => {\n            this.movement = Object.keys(MOVEMENT_KEYS).find(key => MOVEMENT_KEYS[key].includes(which))\n        })\n        window.addEventListener('keyup', ({ which }) => {\n            this.movement = undefined\n            if (which === STOP_KEY) {\n                onStop()\n            }\n        })\n    }\n}\n\n//# sourceURL=webpack:///./src/controller.js?");

/***/ }),

/***/ "./src/game-manager.js":
/*!*****************************!*\
  !*** ./src/game-manager.js ***!
  \*****************************/
/*! exports provided: GameManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GameManager\", function() { return GameManager; });\n/* harmony import */ var wasm_snake_game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! wasm-snake-game */ \"../pkg/rust_js_snake_game.js\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config */ \"./src/config.js\");\n/* harmony import */ var _view__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./view */ \"./src/view.js\");\n/* harmony import */ var _controller__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./controller */ \"./src/controller.js\");\n/* harmony import */ var _storage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./storage */ \"./src/storage.js\");\n\n\n\n\n// after writing {contr} all of this has been added oller } from './controller'\n\n\n\nclass GameManager {\n    constructor() {\n        this.restart()\n        this.view = new _view__WEBPACK_IMPORTED_MODULE_2__[\"View\"](\n            this.game.width,\n            this.game.height,\n            // binding render to this GameManager create new food,snake,score,best score\n            this.render.bind(this)\n        )\n        this.controller = new _controller__WEBPACK_IMPORTED_MODULE_3__[\"Controller\"]()\n        // binding onStop to this, this will ensure that i can access the onStop output from constructor\n        this.onStop.bind(this)\n    }\n    // on restart init new Game with value configured in config.js\n    restart() {\n        // ouu wau i just importing Game, Vector from wasm rust wau wau just like that\n        this.game = new wasm_snake_game__WEBPACK_IMPORTED_MODULE_0__[\"Game\"](\n            _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].WIDTH,\n            _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].HEIGHT,\n            _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].SPEED,\n            _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].SNAKE_LENGTH,\n            new wasm_snake_game__WEBPACK_IMPORTED_MODULE_0__[\"Vector\"](\n                _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].SNAKE_DIRECTION_X,\n                _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].SNAKE_DIRECTION_Y\n            )\n        )\n        // restarting the lastUpdate and stopTime\n        this.lastUpdate = undefined\n        this.stopTime = undefined\n    }\n\n    onStop() {\n        const now = Date.now()\n        if (this.stopTime) {\n            // check if game has been stopped, if yes remove stop time\n            this.stopTime = undefined\n            this.lastUpdate = this.time + now - this.lastUpdate\n        } else {\n            this.stopTime = now\n        }\n    }\n\n    render() {\n        this.view.render(\n            this.game.food,\n            // snake is generated this.game.get_snake()\n            this.game.get_snake(),\n            this.game.score,\n            // DONE actual best score\n            _storage__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getBestScore()\n        )\n    }\n    // the is game loop basically, according to this everything which must re-rendered will be re-rendered\n    tick() {\n        // if game has stopeed i don' want to run game loop \n        if (!this.stopTime) {\n            const lastUpdate = Date.now()\n            if (this.lastUpdate) {\n                // process this.hame in interval from Date.now - previous lastUpdate\n                this.game.process(lastUpdate - this.lastUpdate, this.controller.movement)\n                if (this.game.is_over()) {\n                    this.restart()\n                    return\n                }\n                // update best score with current score if it is bigger\n                if (this.game.score > _storage__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getBestScore()) {\n                    _storage__WEBPACK_IMPORTED_MODULE_4__[\"default\"].setBestScore(this.game.score)\n                }\n            }\n            // update current lastUpdate\n            this.lastUpdate = lastUpdate\n            // render the game\n            this.render()\n        }\n\n\n    }\n    run() {\n        setInterval(this.tick.bind(this), 1000 / _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].FPS)\n    }\n}\n\n//# sourceURL=webpack:///./src/game-manager.js?");

/***/ }),

/***/ "./src/storage.js":
/*!************************!*\
  !*** ./src/storage.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    getBestScore: () => parseInt(localStorage.bestScore) || 0,\n    setBestScore: (bestScore) => localStorage.setItem('bestScore', bestScore)\n});\n\n//# sourceURL=webpack:///./src/storage.js?");

/***/ }),

/***/ "./src/view.js":
/*!*********************!*\
  !*** ./src/view.js ***!
  \*********************/
/*! exports provided: View */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"View\", function() { return View; });\nconst getRange = length => [...Array(length).keys()]\n\nclass View {\n    constructor(gameWidth, gameHeight, onViewChange = () => { }) {\n        this.gameWidth = gameWidth\n        this.gameHeight = gameHeight\n        this.container = document.getElementById('container')\n        this.onViewChange = onViewChange\n        this.setUp()\n        // addinf event listener  'resize\n        window.addEventListener('resize', () => {\n            const [child] = this.container.children\n            if (child) {\n                this.container.removeChild(child)\n                // removing child from container, the child is canvas, so it can be replaced with new\n                // container->smaller one\n            }\n            // init new setUp, that will basically create new smaller container according to requested width and height\n            this.setUp()\n            this.onViewChange()\n        })\n\n    }\n\n\n    setUp() {\n        //  set up will be callend on each view change, and it will calculate how many pixels\n        // will the new cells be\n        const { width, height } = this.container.getBoundingClientRect()\n        this.unitOnScreen = Math.min(\n            width / this.gameWidth,\n            height / this.gameHeight\n        )\n        // new distance will be current distance * unitOnScreen\n        this.projectDistance = distance => distance * this.unitOnScreen\n        // new position will be current position* scale_by(this.unitOnScreen)\n        this.projectPosition = position => position.scale_by(this.unitOnScreen)\n        const canvas = document.createElement('canvas')\n        // appending created cancas element to the this.container\n        this.container.appendChild(canvas)\n        // getContext 2d on canvas will probably make possible toappend some roprtiesto canvas\n        this.context = canvas.getContext('2d')\n        // setting width and heaight of the project to this.projectDistance(this.gameWidth)\n        canvas.setAttribute('width', this.projectDistance(this.gameWidth))\n        canvas.setAttribute('height', this.projectDistance(this.gameHeight))\n\n\n    }\n    // render new food,snake,score,bestScore\n    render(food, snake, score, bestScore) {\n        // first render the chess like container\n        //  before adding new elements base variables must be cleared\n        this.context.clearRect(\n            0,\n            0,\n            this.context.canvas.width,\n            this.context.canvas.height\n        )\n        // set up variables for the chess like context container\n        this.context.globalAlpha = 0.2\n        this.context.fillStyle = 'black'\n        getRange(this.gameWidth).forEach(column =>\n            getRange(this.gameHeight)\n                // filter row where column+rown is not sudden number\n                // for each not sudden row fillRect() with   column *this.unitOnScreen, row*this.unitOnScreen,this.unitOnScreen, and this.unitOnScreen\n                .filter(row => (column + row) % 2 === 1)\n                .forEach(row =>\n                    this.context.fillRect(\n                        column * this.unitOnScreen,\n                        row * this.unitOnScreen,\n                        this.unitOnScreen,\n                        this.unitOnScreen\n                    )\n                )\n        )\n        this.context.globalAlpha = 1\n        // take rust poition \n        const projectedFood = this.projectPosition(food)\n        // this is needed for cirle rendering\n        this.context.beginPath()\n        // add arc to the context at specified location size etc\n        this.context.arc(\n            projectedFood.x,\n            projectedFood.y,\n            this.unitOnScreen / 2.5,\n            0,\n            2 * Math.PI\n        )\n        this.context.fillStyle = '#e74c3c'\n        this.context.fill()\n        // generate snake on the screen\n        this.context.lineWidth = this.unitOnScreen\n        this.context.strokeStyle = '#3498db'\n        this.context.beginPath()\n        snake\n            // mapping snake to projext Project positon\n            // get x,y \n            .map(this.projectPosition)\n            // for each x,y draw a line in x,y location\n            .forEach(({ x, y }) => this.context.lineTo(x, y))\n        // draw the path located above\n        this.context.stroke()\n        document.getElementById('current-score').innerText = score\n        document.getElementById('best-score').innerText = bestScore\n\n    }\n\n\n}\n\n//# sourceURL=webpack:///./src/view.js?");

/***/ })

}]);